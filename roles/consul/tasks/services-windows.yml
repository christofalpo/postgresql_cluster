---
## File: services-windows.yml

- name: Get the list of service config files [Windows]
  ansible.windows.win_find:
    paths: "{{ consul_configd_path }}"
    file_type: file
  register: services_enabled_windows

- name: Set var for enabled services [Windows]
  ansible.builtin.set_fact:
    services_enabled_files: "{{ services_enabled_windows['files'] }}"

- name: Find all service config files that we manage [Windows]
  ansible.windows.win_stat:
    path: "{{ consul_configd_path }}/service_{{ service_config_item.id }}.json"
  with_items: "{{ consul_services }}"
  loop_control:
    loop_var: service_config_item
  register: managed_files_win_paths

- name: Set fact with list of services we manage [Windows]
  ansible.builtin.set_fact:
    managed_files: "{{ managed_files | default([]) }} + [ '{{ service_item.stat.path }}' ]"
  with_items: "{{ managed_files_win_paths.results }}"
  loop_control:
    loop_var: service_item

- name: Set fact with list of existing configuration files
  ansible.builtin.set_fact:
    list_current_service_config: "{{ list_current_service_config | default([]) + [config_file_item.path] }}"
  with_items: "{{ services_enabled_files }}"
  loop_control:
    loop_var: config_file_item

- name: Delete non declared services [Windows]
  ansible.windows.win_file:
    path: "{{ non_declared_service_item }}"
    state: absent
  when:
    - non_declared_service_item not in managed_files
    - non_declared_service_item not in consul_cleanup_ignore_files
  with_items: "{{ list_current_service_config }}"
  loop_control:
    loop_var: non_declared_service_item
  ignore_errors: "{{ ansible_check_mode }}"
  notify:
    - restart consul
